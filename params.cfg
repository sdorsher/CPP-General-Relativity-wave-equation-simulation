metric:
{
flatspacetime=false;
schwarschild=true;
};
waveeq:
{
speed = 1.0;
isgaussian=false;
issinusoid=true;
};
sine:
{

amplitude = 1.0;
wavelength = 20.0;
phase = 0.0;

};
options:
{
useSource = true;
turn_on_source_smoothly = true;
Ltwooutputcount=4000;
use_world_tube=true;
use_generic_orbit=true;
evolve_orbits=false;
};


gauss:
{

mu= 10.1;
sigma=1.0;
amplitude=1.0;
};

schw:
{
mass=1.0;
sigma=1.4142135623730951;
p_orb = 10.0;
ecc =0.0;
};

window:
{
noffset = 0;
};
timewindow:
{
tsigma = 50.0;
torder = 4;
};

modes:
{
lmax = 2;
};


grid:
{
#Adim and Ddim same for both wave equation and Schwarzschild
Adim = 3;
Ddim = 2;
pdenum=3;
#lowerlim = 0.0
#upperlim = 20.0
#numelems = 10;
lowerlim = -20.0;
upperlim = 30.0;
numelems=32;
elemorder=16;
#12
readfromfile=false;
#readfromfile currently broken
outputradius = 10.0;
};

hyperb:
{
#Splus = 30.0;
#Sminus = -20.0;
#Rminus = -12.0;
#Rplus = 22.0; 

#Splus = 19.2;
#Sminus = -12.8;
#Rminus = -7.68;
#Rplus = 15.36;

Splus=30.0;
Rplus=22.0;
Rminus=-12.0;
Sminus=-20.0;

};

time:
{
dt=0.01;
#dt=0.001;
#dt=0.013758251955005463;        
courantfac=0.5;
t0=0.0;
#tmax=1.;
#tmax = 100.;
#tmax = .015;
tmax= 0.01;

outputevery = 100;
comparisoncount=20;
};

file:
{
outputtimefixed =false; 
#output at a fixed time
outputradiusfixed = true; 
#output at a fixed radius
fixedradiusfilename = "/mnt/data/sdorsher/uh"; 
#was "schwwave"
#prefix, ending is txt
pdesolution="/mnt/data/sdorsher/schwwave"; 
#prefix, ending is .txt. output at fixed time
oneperioderror="/mnt/data/sdorsher/diffFunc.txt";
L2error="/mnt/data/sdorsher/convergence.txt";
initialconditions="/mnt/data/sdorsher/uh0.txt";
#was "initialconditions.txt"

};
